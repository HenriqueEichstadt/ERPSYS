#pragma checksum "C:\Users\heichstadt\Desktop\ERPSYS\ERPSYS\ERPSYS.MVC\Views\Cliente\Novo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d067eb3bbd467c865e48cf9821c213b2ccfe0071"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cliente_Novo), @"mvc.1.0.view", @"/Views/Cliente/Novo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cliente/Novo.cshtml", typeof(AspNetCore.Views_Cliente_Novo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\heichstadt\Desktop\ERPSYS\ERPSYS\ERPSYS.MVC\Views\_ViewImports.cshtml"
using ERPSYS.MVC;

#line default
#line hidden
#line 2 "C:\Users\heichstadt\Desktop\ERPSYS\ERPSYS\ERPSYS.MVC\Views\_ViewImports.cshtml"
using ERPSYS.MVC.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d067eb3bbd467c865e48cf9821c213b2ccfe0071", @"/Views/Cliente/Novo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2d4a2b1a83e84c6677e4e24c34048e0c322e64b5", @"/Views/_ViewImports.cshtml")]
    public class Views_Cliente_Novo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Cliente/AdicionaCliente"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("FormCadastro"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 513, true);
            WriteLiteral(@"<title>Cadastrar novo cliente</title>
<div class=""main-content"">
    <div class=""content-heading clearfix"">
        <div class=""heading-left"">
            <h1 class=""page-title"">Formulário</h1>
            <p class=""page-subtitle"">Cadastrar novo cliente</p>
        </div>
        <ul class=""breadcrumb"">
            <li><a href=""#""><i class=""fa fa-home""></i> Home</a></li>
            <li><a href=""#"">Formulário</a></li>
            <li><a href=""#"">Cadastrar novo cliente</a></li>
        </ul>
    </div>


    ");
            EndContext();
            BeginContext(513, 12262, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d067eb3bbd467c865e48cf9821c213b2ccfe00715003", async() => {
                BeginContext(585, 9508, true);
                WriteLiteral(@"
        <div class=""form-horizontal"">
            <div class=""panel-body"" id=""formCadastro"">
                <div class=""form-group"">

                    <div class=""col-md-11 control-label"">
                        <p class=""help-block"">
                            <h11>*</h11> Campo Obrigatório
                        </p>
                    </div>
                </div>
                <div class=""form-group"">
                    <div class=""col-md-2 control-label"">
                        <h3>Dados do cliente:</h3>
                    </div>
                </div>
                <!-- Text input-->
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""NomeCompleto"">Nome Completo <h11>*</h11></label>
                    <div class=""col-md-5"">
                        <input id=""NomeCompleto"" name=""cliente.pessoa.Nome"" value=""ViewBag.Cliente.Pessoa.Nome"" placeholder=""Nome do Cliente"" class=""form-control input-md"" type=""text"">
                    </div>
   ");
                WriteLiteral(@"             </div>
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""Nascimento"">Nascimento<h11>*</h11></label>
                    <div class=""col-md-2"">
                        <input id=""Nascimento"" name=""cliente.pessoa.Data"" value=""ViewBag.Cliente.Pessoa.Data"" placeholder=""DD/MM/AAAA"" class=""form-control input-md"" type=""date"" maxlength=""10"" OnKeyPress=""formatar('##/##/####', this)"" onBlur=""showhide()"">
                    </div>

                    <!-- Multiple Radios (inline) -->

                    <label class=""col-md-1 control-label"" id=""Genero"" for=""Genero"">Gênero <h11>*</h11></label>
                    <div class=""col-md-4"">
                        <label class=""radio-inline"" for=""radios-1"">
                            <input name=""cliente.pessoa.Genero"" id=""sexo"" value=""M"" type=""radio"">
                            Masculino
                        </label>
                        <label class=""radio-inline"" for=""radios-0"">
                 ");
                WriteLiteral(@"           <input name=""cliente.pessoa.Genero"" id=""sexo"" value=""F"" type=""radio"">
                            Feminino
                        </label>
                    </div>
                </div>
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""Rg"">RG <h11>*</h11></label>
                    <div class=""col-md-2"">
                        <input id=""Rg"" name=""cliente.pessoa.Rg"" value=""ViewBag.Cliente.Pessoa.Rg"" placeholder=""Apenas números"" class=""form-control input-md"" type=""text"" maxlength=""11"" pattern=""[0-9]+$"">
                    </div>
                    <label class=""col-md-1 control-label"" for=""Nome"">CPF <h11>*</h11></label>
                    <div class=""col-md-2"">
                        <input id=""CpfeCnpj"" name=""cliente.pessoa.CpfeCnpj"" value=""ViewBag.Cliente.Pessoa.CpfeCnpj"" placeholder=""Apenas números"" onkeyup=""confereCPF(this)"" class=""form-control input-md"" type=""text"" maxlength=""15"" pattern=""^(\d{3}\.\d{3}\.\d{3}-\d{2})$"">
           ");
                WriteLiteral(@"             <span id=""cpfFrase""></span>
                    </div>
                </div>
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""prependedtext"">Email <h11>*</h11></label>
                    <div class=""col-md-5"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-envelope""></i></span>
                            <input id=""email"" name=""cliente.pessoa.Email"" value=""ViewBag.Cliente.Pessoa.Email"" class=""form-control"" placeholder=""clienteemail.com"" type=""email"">
                        </div>
                    </div>
                </div>

                <!-- Prepended text-->
                <div class=""form-group"">

                    <label class=""col-md-2 control-label"" for=""prependedtext"">Telefone 1 <h11>*</h11></label>
                    <div class=""col-md-2"">
                        <div class=""input-group"">
                            <span class");
                WriteLiteral(@"=""input-group-addon""><i class=""glyphicon glyphicon-earphone""></i></span>
                            <input id=""telefoneUm"" name=""cliente.pessoa.TelefoneUm"" value=""ViewBag.Cliente.Pessoa.TelefoneUm"" class=""form-control"" placeholder=""(XX) XXXXX-XXXX"" type=""text"" maxlength=""14"" pattern=""\([0-9]{2}\)[0-9]{4,6}-[0-9]{3,4}+$"">
                        </div>
                    </div>

                    <label class=""col-md-1 control-label"" for=""prependedtext"">Telefone 2 <h11></h11></label>
                    <div class=""col-md-2"">
                        <div class=""input-group"">
                            <span class=""input-group-addon""><i class=""glyphicon glyphicon-earphone""></i></span>
                            <input id=""telefoneDois"" name=""cliente.pessoa.TelefoneDois"" value=""ViewBag.Cliente.Pessoa.TelefoneDois"" class=""form-control"" placeholder=""(XX) XXXXX-XXXX"" type=""text"" maxlength=""14"" pattern=""\([0-9]{2}\)[0-9]{4,6}-[0-9]{3,4}+$"">
                        </div>
                    </div>


          ");
                WriteLiteral(@"      </div>
                <hr>
                <div class=""form-group"">
                    <div class=""col-md-2 control-label"">
                        <h3>Dados de endereço:</h3>
                    </div>
                </div>

                <!-- Search input-->
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""CEP"">CEP <h11>*</h11></label>
                    <div class=""col-md-2"">
                        <input id=""Cep"" name=""cliente.pessoa.endereco.Cep"" value=""ViewBag.Cliente.Pessoa.Endereco.Cep"" onfocusout=""pesquisacep(Cep.value)"" placeholder=""Apenas números"" class=""form-control input-md"" type=""search"" maxlength=""8"" pattern=""[0-9]+$"">
                    </div>
                    <div class=""col-md-2"">
                        <button type=""button"" class=""btn btn-primary"" onclick=""pesquisacep(Cep.value)"">Pesquisar</button>
                    </div>
                </div>

                <!-- Endereço-->
                <div class=""form-group");
                WriteLiteral(@""">
                    <label class=""col-md-2 control-label"" for=""prependedtext"">Endereço</label>
                    <div class=""col-md-4"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">Rua</span>
                            <input id=""rua"" name=""cliente.pessoa.endereco.Rua"" value=""ViewBag.Cliente.Pessoa.Endereco.Rua"" class=""form-control"" placeholder="""" type=""text"">
                        </div>

                    </div>
                    <div class=""col-md-2"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">Nº <h11>*</h11></span>
                            <input id=""numero"" name=""cliente.pessoa.endereco.Numero"" value=""ViewBag.Cliente.Pessoa.Endereco.Numero"" class=""form-control"" placeholder="""" type=""text"">
                        </div>

                    </div>

                    <div class=""col-md-3"">
                        <div class=""input-group"">
                     ");
                WriteLiteral(@"       <span class=""input-group-addon"">Bairro</span>
                            <input id=""bairro"" name=""cliente.pessoa.endereco.Bairro"" value=""ViewBag.Cliente.Pessoa.Endereco.Bairro"" class=""form-control"" placeholder="""" type=""text"">
                        </div>

                    </div>
                </div>

                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""prependedtext""></label>
                    <div class=""col-md-4"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">Cidade</span>
                            <input id=""cidade"" name=""cliente.pessoa.endereco.Cidade"" value=""ViewBag.Cliente.Pessoa.Endereco.Cidade"" class=""form-control"" placeholder="""" type=""text"">
                        </div>

                    </div>

                    <div class=""col-md-2"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">Estado</span>
    ");
                WriteLiteral(@"                        <input id=""estado"" name=""cliente.pessoa.endereco.Estado"" value=""ViewBag.Cliente.Pessoa.Endereco.Estado"" class=""form-control"" placeholder="""" type=""text"">
                        </div>

                    </div>
                    <div class=""col-md-3"">
                        <div class=""input-group"">
                            <span class=""input-group-addon"">Complemento</span>
                            <input id=""complemento"" name=""cliente.pessoa.endereco.Complemento"" value=""ViewBag.Cliente.Pessoa.Endereco.Complemento"" class=""form-control"" placeholder="""" type=""text"">
                        </div>
                    </div>
                </div>
                <hr>
                <div class=""form-group"">
                    <div class=""col-md-2 control-label"">
                        <h3>Dados do Veículo:</h3>
                    </div>
                </div>
                <hr />

                <div class=""form-group"">
                    <label class=""col-md-2 control-lab");
                WriteLiteral(@"el"" for=""Rg"">Tipo de Veículo</label>
                    <div class=""col-md-2"">
                        <select id=""listaTipoDeVeiculo"" name=""cliente.pessoa.veiculo.TipoDeVeiculo"" value=""ViewBag.Cliente.Pessoa.Veiculo.TipoDeVeiculo"" class=""form-control input-md"">
                            ");
                EndContext();
                BeginContext(10093, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d067eb3bbd467c865e48cf9821c213b2ccfe007115624", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10110, 430, true);
                WriteLiteral(@"
                        </select>
                    </div>
                    <label class=""col-md-1 control-label"" for=""Nome"">Fabricante</label>
                    <div class=""col-md-2"">
                        <select id=""listaFabricantes"" onclick=""PegaFabricantes()"" name=""cliente.pessoa.veiculo.Fabricante"" oncç value=""ViewBag.Cliente.Pessoa.Veiculo.Fabricante"" class=""form-control input-md"">
                            ");
                EndContext();
                BeginContext(10540, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d067eb3bbd467c865e48cf9821c213b2ccfe007117197", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10557, 2211, true);
                WriteLiteral(@"
                        </select>
                    </div>
                </div>

                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""modelo"">Modelo <h11>*</h11></label>
                    <div class=""col-md-5"">
                        <input id=""modelo"" name=""cliente.pessoa.veiculo.Modelo"" value=""ViewBag.Cliente.Pessoa.Veiculo.Modelo"" placeholder=""Modelo do veículo"" class=""form-control input-md"" type=""text"">
                    </div>
                </div>

                <div class=""form-group"">
                    <label class=""col-md-1 control-label"" for=""placa"">Placa</label>
                    <div class=""col-md-2"">
                        <input id=""placa"" name=""cliente.pessoa.veiculo.Placa"" value=""ViewBag.Cliente.Pessoa.Veiculo.Placa"" placeholder=""ABC-1234"" class=""form-control input-md"" type=""text"">
                    </div>
                    <label class=""col-md-1 control-label"" for=""Rg"">Ano</label>
                    <div class=""col-md-2");
                WriteLiteral(@""">
                        <input id=""ano"" name=""cliente.pessoa.veiculo.Ano"" value=""ViewBag.Cliente.Pessoa.Veiculo.Ano"" class=""form-control input-md"" type=""text"">
                    </div>
                    <label class=""col-md-1 control-label"" for=""Rg"">Cor</label>
                    <div class=""col-md-2"">
                        <input id=""cor"" name=""cliente.pessoa.veiculo.Cor"" value=""ViewBag.Cliente.Pessoa.Veiculo.Cor"" class=""form-control input-md"" type=""text"">
                    </div>
                </div>

                <hr>
                <!-- Botão Cadastrar e Cancelar -->
                <div class=""form-group"">
                    <label class=""col-md-2 control-label"" for=""Cadastrar""></label>
                    <div class=""col-md-8"">
                        <button id=""Cadastrar"" name=""Cadastrar"" class=""btn btn-success"" type=""Submit"">Cadastrar</button>
                        <button id=""Cancelar"" name=""Cancelar"" class=""btn btn-danger"" type=""Reset"">Cancelar</button>
                    </di");
                WriteLiteral("v>\n                    <fieldset id=\"\"></fieldset>\n\n                </div>\n            </div>\n            <fieldset id=\"panel-body\"></fieldset>\n        </div>\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12775, 8, true);
            WriteLiteral("\n</div>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
